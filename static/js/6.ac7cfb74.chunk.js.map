{"version":3,"sources":["components/common/FormControl/FormControl.module.css","utils/validators/validators.js","components/common/FormControl/FormControl.jsx","hoc/WithRedirect.jsx","components/Messages/Messages.module.css","components/Messages/DialogItem/DialogItem.jsx","components/Messages/Message/Message.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"names":["module","exports","required","value","undefined","maxLength","max","length","Textarea","input","meta","props","hasError","touched","error","className","style","formControl","Input","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogsItem","id","activeClassName","activeLine","name","Message","dialog","text","maxLength255","MessagesReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","validate","Messages","dialogEl","dialogData","map","textEl","textData","dialogs","dialogsItem","messages","console","log","sendMessageAdd","newMessage","compose","dialogPage","dispatch","addMessageCreator"],"mappings":"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","file":"static/js/6.ac7cfb74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__34nem\",\"error\":\"FormControl_error__eQJDD\",\"formSummaryError\":\"FormControl_formSummaryError__2pK6j\"};","export const required = (value) => (value ? undefined : \"быстро написал\");\r\n\r\nexport const maxLength = (max) => (value) =>\r\n  value && value.length > max\r\n    ? `Много чирикаешь, максы ${max} символов `\r\n    : undefined;\r\n","import * as React from \"react\";\r\nimport style from \"./FormControl.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={style.formControl + \" \" + (hasError ? style.error : \" \")}>\r\n      <div>\r\n        <textarea {...input} {...props} />\r\n      </div>\r\n      {hasError && <span> {meta.error} </span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={style.formControl + \" \" + (hasError ? style.error : \" \")}>\r\n      <div>\r\n        <input {...input} {...props} />\r\n      </div>\r\n      {hasError && <span> {meta.error} </span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  component,\r\n  type,\r\n  validators,\r\n  text = \"\"\r\n) => {\r\n  <div> \r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      component={component}\r\n      type={type}\r\n      validate={validators}\r\n    />\r\n    {text}\r\n  </div>;\r\n};\r\n","import * as React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnentRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnentRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messages_dialogs__3N_3M\",\"dialogsItem\":\"Messages_dialogsItem__1MFSz\",\"activeLine\":\"Messages_activeLine__1nRi8\",\"messages\":\"Messages_messages__3YpA_\"};","import React from 'react';\r\nimport style from './../Messages.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogsItem = (props) => {\r\n  return (\r\n    <div>\r\n      <NavLink to={'/messages/' + props.id} activeClassName={style.activeLine}>{props.name}</NavLink>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default DialogsItem;","import React from 'react';\r\nimport style from './../Messages.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={style.dialog}>{props.text}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport style from \"./Messages.module.css\";\r\nimport DialogsItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLength, required } from './../../utils/validators/validators';\r\nimport { Textarea } from './../common/FormControl/FormControl';\r\n\r\n\r\n\r\nconst maxLength255 = maxLength(255)\r\n\r\nconst MessagesForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder={\"Чирикни письмо\"}\r\n          name={\"newMessage\"}\r\n          component={Textarea}\r\n          validate={[required, maxLength255]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field name={\"submitMessage\"} component={\"button\"}>\r\n          Submit\r\n        </Field>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst MessagesReduxForm = reduxForm({\r\n  form: \"message\",\r\n})(MessagesForm);\r\n\r\nconst Messages = (props) => {\r\n  \r\n  let dialogEl = props.dialogData.map((dialogData) => (\r\n    <DialogsItem name={dialogData.name} id={dialogData.id} />\r\n  ));\r\n\r\n  let textEl = props.textData.map((textData) => (\r\n    <Message text={textData.text} />\r\n  ));\r\n\r\n  let addMessages = (value) => {\r\n    console.log(value);\r\n    props.sendMessageAdd(value.newMessage);\r\n  };\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div className={style.dialogsItem}>{dialogEl}</div>\r\n      <div className={style.messages}>\r\n        {textEl}\r\n        <div>\r\n          <MessagesReduxForm onSubmit={addMessages} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport Messages from \"./Messages\";\r\nimport { addMessageCreator } from \"../../redux/messages-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"./../../hoc/WithRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogData: state.dialogPage.dialogData,\r\n    textData: state.dialogPage.textData,\r\n    newMessage: state.dialogPage.newMessage,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessageAdd: (newMessage) => {\r\n      dispatch(addMessageCreator(newMessage));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Messages);\r\n"],"sourceRoot":""}
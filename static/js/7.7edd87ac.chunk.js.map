{"version":3,"sources":["components/common/FormControl/FormControl.module.css","utils/validators/validators.js","components/common/FormControl/FormControl.jsx","components/Login/Login.jsx"],"names":["module","exports","required","value","undefined","maxLength","max","length","Textarea","input","meta","props","hasError","touched","error","className","style","formControl","Input","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","placeholder","name","component","type","validate","formSummaryError","connect","state","isAuth","auth","login","logout","to","formData","email","password","rememberMe"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,iBAAmB,wC,iCCDvH,oEAAO,IAAMC,EAAW,SAACC,GAAD,OAAYA,OAAQC,EAAY,mFAE3CC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAChCA,GAASA,EAAMI,OAASD,EAAxB,gIAC8BA,EAD9B,2DAEIF,K,yJCDOI,G,OAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAC/CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACE,sBAAKC,UAAWC,IAAMC,YAAc,KAAOL,EAAWI,IAAMF,MAAQ,KAApE,UACE,8BACE,oDAAcL,GAAWE,MAE1BC,GAAY,qCAAQF,EAAKI,MAAb,YAKNI,EAAQ,SAAC,GAA+B,IAA7BT,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAC5CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACE,sBAAKC,UAAWC,IAAMC,YAAc,KAAOL,EAAWI,IAAMF,MAAQ,KAApE,UACE,8BACE,iDAAWL,GAAWE,MAEvBC,GAAY,qCAAQF,EAAKI,MAAb,Y,uIC2BbK,EAAiBC,YAAU,CAC/BC,KAAM,SADeD,EAzCL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAcR,EAAY,EAAZA,MAEjC,OACE,uBAAMS,SAAUD,EAAhB,UACA,8BAAK,cAAC,IAAD,CACHE,YAAa,QACbC,KAAM,QACNC,UAAWR,IACXS,KAAM,QACNC,SAAU,CAAC1B,SAEb,8BAAK,cAAC,IAAD,CACHsB,YAAa,WACbC,KAAM,WACNC,UAAWR,IACXS,KAAM,WACNC,SAAU,CAAC1B,SAEb,gCAAK,cAAC,IAAD,CAEHuB,KAAM,aACNC,UAAWR,IACXS,KAAM,WACNC,SAAU,CAAC1B,OALb,mBAaGY,GAAS,qBAAKC,UAAWC,IAAMa,iBAAtB,SAAyCf,IAEnD,8BACE,cAAC,IAAD,CAAOW,KAAM,QAASC,UAAW,SAAjC,2BAkCOI,uBANO,SAACC,GACrB,MAAO,CACLC,OAAQD,EAAME,KAAKD,UAIiB,CACtCE,UACAC,YAFaL,EAvBD,SAACnB,GAKb,OAAIA,EAAMqB,OACD,cAAC,IAAD,CAAUI,GAAI,WAAd,eAIP,gCACE,2CACA,cAACjB,EAAD,CAAgBI,SAXH,SAACc,GAChB1B,EAAMuB,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.7edd87ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__34nem\",\"error\":\"FormControl_error__eQJDD\",\"formSummaryError\":\"FormControl_formSummaryError__2pK6j\"};","export const required = (value) => (value ? undefined : \"быстро написал\");\r\n\r\nexport const maxLength = (max) => (value) =>\r\n  value && value.length > max\r\n    ? `Много чирикаешь, максы ${max} символов `\r\n    : undefined;\r\n","import * as React from \"react\";\r\nimport style from \"./FormControl.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={style.formControl + \" \" + (hasError ? style.error : \" \")}>\r\n      <div>\r\n        <textarea {...input} {...props} />\r\n      </div>\r\n      {hasError && <span> {meta.error} </span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={style.formControl + \" \" + (hasError ? style.error : \" \")}>\r\n      <div>\r\n        <input {...input} {...props} />\r\n      </div>\r\n      {hasError && <span> {meta.error} </span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  component,\r\n  type,\r\n  validators,\r\n  text = \"\"\r\n) => {\r\n  <div> \r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      component={component}\r\n      type={type}\r\n      validate={validators}\r\n    />\r\n    {text}\r\n  </div>;\r\n};\r\n","import * as React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { createField, Input } from \"../common/FormControl/FormControl\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, logout } from \"./../../redux/auth-reduser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport style from \"./../common/FormControl/FormControl.module.css\";\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n \r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n    <div><Field\r\n      placeholder={\"Email\"}\r\n      name={\"email\"}\r\n      component={Input}\r\n      type={\"email\"}\r\n      validate={[required]}\r\n    /></div>\r\n    <div><Field\r\n      placeholder={\"Password\"}\r\n      name={\"password\"}\r\n      component={Input}\r\n      type={\"password\"}\r\n      validate={[required]}\r\n    /></div>\r\n    <div><Field\r\n      /* placeholder={\"Password\"} */\r\n      name={\"rememberMe\"}\r\n      component={Input}\r\n      type={\"checkbox\"}\r\n      validate={[required]}\r\n    /> Remember me </div> \r\n\r\n{/* {createField(\"Email\", \"email\", Input, \"email\", [required])}\r\n{createField(\"Password\", \"password\", Input, \"password\", [required])}\r\n{createField(null, \"rememberMe\", \"input\", \"checkbox\", [], {\r\n        text: \"Remember me\",\r\n      })} */}\r\n      {error && <div className={style.formSummaryError}>{error}</div>}\r\n\r\n      <div>\r\n        <Field name={\"login\"} component={\"button\"}>\r\n          Login\r\n        </Field>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst LoginReduxForm = reduxForm({\r\n  form: \"login\", //\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"}> </Redirect>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1> LOOOGin </h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  login,\r\n  logout,\r\n})(Login);\r\n"],"sourceRoot":""}
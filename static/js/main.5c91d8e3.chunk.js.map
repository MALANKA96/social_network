{"version":3,"sources":["components/Navbar/NavBar.module.css","reportWebVitals.js","components/Navbar/NavBar.jsx","components/News/News.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reduser.js","hoc/WithSuspense.jsx","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","components/Header/Header.module.css","redux/auth-reduser.js","redux/profile-reducer.js","assets/image/preloader.svg","components/common/Preloader/Preloader.js","redux/messages-reducer.js","private/API-KEY.js","api/api.js","utils/obkects-helpers.js","redux/users-reducer.js","components/News/News.module.css","components/common/Preloader/Preloader.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","className","style","navbar","item","to","activeClassName","activeLine","News","textNewsEl","React","createRef","news","name","id","cols","rows","ref","onClick","textNews","current","value","alert","Header","props","header","logo","src","headerText","loginBlock","isAuth","login","logout","HeaderContainer","this","connect","state","auth","email","userId","INITILIZED_SUCCESS","initialState","initilized","appReducer","action","type","withSuspense","Component","fallback","sidebarReducer","reducers","combineReducers","postPage","postPageReducer","dialogPage","dialogPageReducer","sidebar","usersPage","usersPageReducer","authReducer","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","MessagesContainer","UsersContainer","ProfileContainer","Login","App","initilizeApp","path","render","Preloader","AppContainer","compose","withRouter","dispatch","promise","getAuthData","Promise","all","SamuraiApp","rerender","ReactDOM","document","getElementById","subscribe","SET_AUTH_USER_DATA","setAuthUserData","payload","a","authAPI","me","data","resultCode","password","rememberMe","message","messages","length","stopSubmit","_error","ADD_POST","SET_USERS_PROFILE","SET_STATUS","postData","likesCount","profile","status","addPostCreator","newPost","setStatus","getUserProfile","profileAPI","getUserStatus","updateProfileStatus","preloader","ADD_MESSAGE","dialogData","textData","text","addMessageCreator","newMessage","headers","instance","axios","withCredentials","baseURL","usersAPI","getUsers","currentPage","pageSize","get","response","getProfile","postUsers","post","deleteUsers","delete","put","captchaAPI","captcha","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowflow","apiMethod","actionCreator","requestUsers","page","totalUsers","totalCount","count","unfollow","bind","follow","followed","filter"],"mappings":"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","file":"static/js/main.5c91d8e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__3a8LT\",\"item\":\"NavBar_item__IETTg\",\"activeLine\":\"NavBar_activeLine__2rE-3\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './NavBar.module.css';\r\n\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className={style.navbar}>\r\n            <div className={style.item}>\r\n                <NavLink to='/profile' activeClassName={style.activeLine}> Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/messages' activeClassName={style.activeLine}> Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/users' activeClassName={style.activeLine} > Users</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/news' activeClassName={style.activeLine}> News</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/friends' activeClassName={style.activeLine}> Friends</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/setting' activeClassName={style.activeLine}> Setting</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NavBar;","import  React  from 'react';\r\nimport style from './News.module.css';\r\n\r\nconst News = () => {\r\n\r\nlet textNewsEl = React.createRef();\r\n\r\nlet addNews = ()=> {\r\n    let textNews = textNewsEl.current.value;\r\n    alert (textNews)\r\n};\r\n\r\n\r\n    return (\r\n        <div className={style.news}> My first news in REACT\r\n        <div> \r\n            <textarea name=\"sad\" id=\"d\" cols=\"30\" rows=\"10\" ref={textNewsEl} ></textarea>\r\n            <button onClick={addNews} >add news</button>\r\n        </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default News;\r\n","import * as React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className={style.header}>\r\n      <NavLink to=\"/profile\" activeClassName={style.activeLine} >\r\n        <img className={style.logo} src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/NASA_logo.svg/200px-NASA_logo.svg.png\"></img>\r\n      </NavLink>\r\n\r\n      <div className={style.headerText}>SOCIAL NETWORK in REACT.js</div>\r\n      <div className={style.loginBlock}>\r\n        {props.isAuth === true ? (\r\n          <div>\r\n            {props.login} <button onClick={props.logout}>Log out</button>\r\n          </div>\r\n        ) : (\r\n          <button>\r\n            <NavLink to={\"/login\"} activeClassName={style.activeLine}>\r\n              Login\r\n            </NavLink>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import * as React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { logout } from \"./../../redux/auth-reduser\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    login: state.auth.login,\r\n    email: state.auth.email,\r\n    id: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  logout,\r\n})(HeaderContainer);\r\n","import { getAuthData } from \"./auth-reduser\";\r\n\r\nconst INITILIZED_SUCCESS = \"INITILIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n  initilized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITILIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initilized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initilizedSuccess = () => ({\r\n  type: INITILIZED_SUCCESS,\r\n});\r\n\r\nexport const initilizeApp = () => {\r\n  return (dispatch) => {\r\n    let promise = dispatch(getAuthData());\r\n\r\n    Promise.all([promise]).then(() => {\r\n      dispatch(initilizedSuccess());\r\n    });\r\n  };\r\n};\r\n\r\nexport default appReducer;\r\n","import * as React from \"react\";\r\n\r\nconst withSuspense = (Component) => {\r\n  return (props) => {\r\n    return (\r\n      <React.Suspense fallback={<div>LOOOAD...</div>}>\r\n        <Component {...props} />\r\n      </React.Suspense>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withSuspense;\r\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\n\r\nexport default sidebarReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport postPageReducer from \"./profile-reducer\";\r\nimport dialogPageReducer from \"./messages-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersPageReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reduser\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reduser\";\r\n\r\nlet reducers = combineReducers({\r\n  postPage: postPageReducer,\r\n  dialogPage: dialogPageReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersPageReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;\r\n","import * as React from \"react\";\r\nimport { HashRouter, Route, withRouter, BrowserRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport NavBar from \"./components/Navbar/NavBar\";\r\nimport News from \"./components/News/News\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport { compose } from \"redux\";\r\nimport { initilizeApp } from \"./redux/app-reduser\";\r\nimport { connect, Provider } from \"react-redux\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport withSuspense from \"./hoc/WithSuspense\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nconst MessagesContainer = React.lazy(() =>\r\n  import(\"./components/Messages/MessagesContainer\")\r\n);\r\nconst UsersContainer = React.lazy(() =>\r\n  import(\"./components/Users/UsersContainer\")\r\n);\r\nconst ProfileContainer = React.lazy(() =>\r\n  import(\"./components/Profile/ProfileContainer\")\r\n);\r\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initilizeApp();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initilized) {\r\n      return <Preloader />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"app_wrap\">\r\n          <HeaderContainer />\r\n          <NavBar />\r\n          <Route\r\n            path=\"/profile/:userId?\"\r\n            render={withSuspense(ProfileContainer)}\r\n          />\r\n          <Route path=\"/messages\" render={withSuspense(MessagesContainer)} />\r\n          <Route path=\"/users\" render={withSuspense(UsersContainer)} />\r\n          <Route path=\"/login\" render={withSuspense(Login)} />\r\n          <Route path=\"/news\" render={() => <News />} />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initilized: state.app.initilized,\r\n  };\r\n};\r\n\r\nlet AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initilizeApp })\r\n)(App);\r\n\r\nconst SamuraiApp = (props) => {\r\n  return (\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default SamuraiApp;\r\n","import reportWebVitals from \"./reportWebVitals\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport SamuraiApp from \"./App\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nlet rerender = () => {\r\n  ReactDOM.render( <SamuraiApp />,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\n\r\nrerender();\r\n\r\nstore.subscribe(() => {\r\n  rerender();\r\n});\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__GVmnM\",\"headerText\":\"Header_headerText__lxWtu\",\"loginBlock\":\"Header_loginBlock__ttej7\",\"activeLine\":\"Header_activeLine__28BA4\"};","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, captchaAPI } from \"../api/api\";\r\n\r\nconst SET_AUTH_USER_DATA = \"samurai/auth/SET_AUTH_USER_DATA\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_AUTH_USER_DATA,\r\n  payload: { userId, email, login, isAuth },\r\n});\r\n\r\nexport const getAuthData = () => async (dispatch) => {\r\n  let data = await authAPI.me();\r\n  if (data.resultCode === 0) {\r\n    let { id, email, login } = data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let data = await authAPI.login(email, password, rememberMe);\r\n  if (data.resultCode === 0) {\r\n    dispatch(getAuthData());\r\n  } else {\r\n    const message = data.messages.length > 0 ? data.messages[0] : \"АААшибка\";\r\n    dispatch(\r\n      stopSubmit(\"login\", {\r\n        _error: message,\r\n      })\r\n    );\r\n  }\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n  let data = await authAPI.logout();\r\n  if (data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport const captcha = () => async (dispatch) => {\r\n  let data = await captchaAPI.captcha();\r\n  dispatch();\r\n};\r\nexport default authReducer;\r\n","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\n\r\nconst SET_USERS_PROFILE = \"SET_USERS_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n  postData: [\r\n    {\r\n      id: 1,\r\n      message: \"Hello, this my first post in the social network \",\r\n      likesCount: \"99\",\r\n    },\r\n    { id: 2, message: \"222 \", likesCount: \"1\" },\r\n    { id: 3, message: \"mb ya sportboy \", likesCount: \"98\" },\r\n  ],\r\n  profile: null,\r\n  status: \" \",\r\n};\r\n\r\nconst postPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        postData: [\r\n          ...state.postData,\r\n          { id: 5, message: action.newPost, likesCount: 0 },\r\n        ],\r\n      };\r\n    case SET_USERS_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostCreator = (newPost) => ({ type: ADD_POST, newPost });\r\n\r\nexport const setUsersProfile = (profile) => {\r\n  return {\r\n    type: SET_USERS_PROFILE,\r\n    profile,\r\n  };\r\n};\r\nexport const setStatus = (status) => {\r\n  return {\r\n    type: SET_STATUS,\r\n    status,\r\n  };\r\n};\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let data = await profileAPI.getUserProfile(userId);\r\n  dispatch(setUsersProfile(data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n  let data = await profileAPI.getUserStatus(userId);\r\n  dispatch(setStatus(data));\r\n};\r\nexport const updateProfileStatus = (status) => async (dispatch) => {\r\n  let data = await profileAPI.updateProfileStatus(status);\r\n  if (data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport default postPageReducer;\r\n","export default __webpack_public_path__ + \"static/media/preloader.68e5d61a.svg\";","import * as React from \"react\";\r\nimport preloader from \"../../../assets/image/preloader.svg\";\r\nimport style from \"./Preloader.module.css\";\r\n\r\nlet Preloader = () => {\r\n  return (\r\n    <div className={style.preloader} >\r\n      <img src={preloader} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","const ADD_MESSAGE = \"ADD-MESSAGE\";\r\n\r\nlet initialState = {\r\n  dialogData: [\r\n    { id: 1, name: \"Anton\" },\r\n    { id: 2, name: \"Pasha\" },\r\n    { id: 3, name: \"Nadya\" },\r\n    { id: 4, name: \"Vlad\" },\r\n    { id: 5, name: \"Julia\" },\r\n    { id: 6, name: \"Jeka\" },\r\n  ],\r\n\r\n  textData: [\r\n    { id: 1, text: \"Hi\" },\r\n    { id: 1, text: \"Hello react\" },\r\n    { id: 1, text: \"ya tebya viuchu\" },\r\n    { id: 1, text: \"100pro\" },\r\n  ],\r\n};\r\n\r\nconst dialogPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        textData: [...state.textData, { id: 2, text: action.newMessage }],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addMessageCreator = (newMessage) => ({\r\n  type: ADD_MESSAGE,\r\n  newMessage,\r\n});\r\n\r\nexport default dialogPageReducer;\r\n","const headers = {\r\n  \"API-KEY\": \"86504be2-16d9-4a2e-8108-546da07532b1\",\r\n};\r\n\r\nexport default headers;\r\n","import * as React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport headers from \"./../private/API-KEY\";\r\n\r\nlet instance = axios.create({\r\n  withCredentials: true,\r\n  headers,\r\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  getProfile(userId) {\r\n    return instance.get(`profile/${userId}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  postUsers(id) {\r\n    return instance.post(`follow/${id}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  deleteUsers(id) {\r\n    return instance.delete(`follow/${id}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getUserProfile(userId) {\r\n    return instance.get(`profile/${userId}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  getUserStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  updateProfileStatus(status) {\r\n    return instance\r\n      .put(`profile/status`, { status: status })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  login(email, password, rememberMe) {\r\n    return instance\r\n      .post(`auth/login`, { email, password, rememberMe })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n};\r\nexport const captchaAPI = {\r\n  captcha() {\r\n    return instance.get(`security/get-captcha-url`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n};\r\n","export const updateObjectInArray = (\r\n  items,\r\n  itemId,\r\n  objPropName,\r\n  newObjProps\r\n) => {\r\n  return items.map((u) => {\r\n    if (u[objPropName] === itemId) {\r\n      return { ...u, ...newObjProps };\r\n    }\r\n    return u;\r\n  });\r\n};\r\n","import { usersAPI } from \"./../api/api\";\r\nimport { updateObjectInArray } from \"./../utils/obkects-helpers\";\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_FOLLOWING_PROGRESS = \"TOGGLE_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: true,\r\n        }),\r\n\r\n        /* state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        }), */\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: false,\r\n        }),\r\n      };\r\n    case SET_USERS:\r\n      return { ...state, users: action.users };\r\n    case SET_CURRENT_PAGE: {\r\n      return { ...state, currentPage: action.currentPage };\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return { ...state, totalUsersCount: action.count };\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n    case TOGGLE_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : [state.followingInProgress.filter((id) => id !== action.userId)],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\nexport const setTotalUsersCount = (totalUsers) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  count: totalUsers,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching: isFetching,\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\nconst followUnfollowflow = async (\r\n  dispatch,\r\n  userId,\r\n  apiMethod,\r\n  actionCreator\r\n) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  let data = await apiMethod(userId);\r\n  if (data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  dispatch(setCurrentPage(page));\r\n\r\n  let data = await usersAPI.getUsers(page, pageSize);\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsers(data.items));\r\n  dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n  followUnfollowflow(\r\n    dispatch,\r\n    userId,\r\n    usersAPI.deleteUsers.bind(usersAPI),\r\n    unfollowSuccess\r\n  );\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n  followUnfollowflow(\r\n    dispatch,\r\n    userId,\r\n    usersAPI.postUsers.bind(usersAPI),\r\n    followSuccess\r\n  );\r\n};\r\nexport default usersPageReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__B0aN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2Ugnz\"};"],"sourceRoot":""}